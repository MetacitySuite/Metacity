from typing import List

class MultiLine(Primitive):
    def __init__(self) -> None: ...
    def contents(self) -> List[List[float]]: ...
    def deserialize(self, arg0: json) -> None: ...
    def push_l2(self, arg0: List[float]) -> None: ...
    def push_l3(self, arg0: List[float]) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    def transform(self) -> None: ...
    @property
    def type(self) -> str: ...

class MultiPoint(Primitive):
    def __init__(self) -> None: ...
    def contents(self) -> List[float]: ...
    def deserialize(self, arg0: json) -> None: ...
    def push_p2(self, arg0: List[float]) -> None: ...
    def push_p3(self, arg0: List[float]) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    def transform(self) -> None: ...
    @property
    def type(self) -> str: ...

class MultiPolygon(Primitive):
    def __init__(self) -> None: ...
    def contents(self) -> List[List[List[float]]]: ...
    def deserialize(self, arg0: json) -> None: ...
    def push_p2(self, arg0: List[List[float]]) -> None: ...
    def push_p3(self, arg0: List[List[float]]) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    def transform(self) -> None: ...
    @property
    def type(self) -> str: ...

class Primitive:
    def __init__(self) -> None: ...
    def deserialize(self, arg0: json) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    def transform(self) -> None: ...
    @property
    def type(self) -> str: ...
    @property
    def vertices(self) -> List[float]: ...

class SimpleMultiLine(Primitive):
    def __init__(self, arg0: MultiLine) -> None: ...
    def deserialize(self, arg0: json) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    @property
    def type(self) -> str: ...

class SimpleMultiPoint(Primitive):
    def __init__(self, arg0: MultiPoint) -> None: ...
    def deserialize(self, arg0: json) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    @property
    def type(self) -> str: ...

class SimpleMultiPolygon(Primitive):
    def __init__(self, arg0: MultiPolygon) -> None: ...
    def deserialize(self, arg0: json) -> None: ...
    def serialize(self) -> json: ...
    def slice_to_grid(self, arg0: float) -> List[Primitive]: ...
    @property
    def type(self) -> str: ...
