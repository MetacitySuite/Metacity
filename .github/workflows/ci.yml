name: Metacity CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ dev ]

jobs:
  run-settings:
    runs-on: ubuntu-latest
    outputs:
      out-bump: ${{ steps.run-setup.outputs.bump }}
      out-package: ${{ steps.run-setup.outputs.package }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Check for commit tags
      id: run-setup
      run: |
        log=$(git log --pretty=oneline --max-count=1)
        case "$log" in
            *action::bump* ) bump=1;;
            * ) bump=0;;
        esac
        echo "::set-output name=bump::$bump"

        case "$log" in
            *action::package* ) package=1;;
            *action::deploy* ) package=1;;
            * ) package=0;;
        esac
        echo "::set-output name=package::$package"

  test:
    runs-on: ubuntu-latest
    needs: run-settings
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install system requirements
      run: |
        sudo add-apt-repository ppa:ubuntugis/ppa
        sudo apt-get update
        sudo apt-get install gdal-bin
        sudo apt-get install libgdal-dev
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        sudo apt-get install libcgal-dev
        sudo apt-get install cmake

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build Geometry package
      run: |
        python setup.py build_ext --inplace
    - name: Test with pytest
      run: |
        pytest tests/* --cov=metacity
    - name: Upload to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        pip install coveralls
        coveralls

  bump:
    runs-on: ubuntu-latest
    if: needs.run-settings.outputs.out-bump == 1 && github.event_name == 'push' && contains(github.ref, 'dev')
    needs: [ test, run-settings ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump

    - name: Get version
      run: |
        log=$(git log --pretty=oneline --max-count=1)
        case "$log" in
            *version::major* ) cmd='bump --major --reset';;
            *version::minor* ) cmd='bump --minor --reset';;
            * ) cmd='bump --patch';;
        esac
        eval $cmd

    - uses: EndBug/add-and-commit@v7
      with:
        default_author: github_actions
        message: "Bumped package version"

  package-deploy:
    runs-on: ubuntu-latest
    if: needs.run-settings.outputs.out-package == 1 && github.event_name == 'push' && contains(github.ref, 'main')
    needs: [ test, run-settings ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
    - name: Prepare for dist
      run: |
        python setup.py sdist

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

